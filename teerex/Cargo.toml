[package]
name = "pallet-teerex"
description = "The remote attestation registry and verification pallet for integritee blockchains and parachains"
version = "0.10.0"
authors = ["Integritee AG <hello@integritee.network>"]
homepage = "https://integritee.network/"
repository = "https://github.com/integritee-network/pallets/"
license = "MS-RSL"
edition = "2021"

[dependencies]
parity-scale-codec = { workspace = true }
hex = { workspace = true }
log = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true, optional = true }
webpki = { workspace = true }

# local
sgx-verify = { path = "sgx-verify", default-features = false }
teerex-primitives = { path = "../primitives/teerex", default-features = false }

# substrate dependencies
frame-support = { workspace = true }
frame-system = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }
pallet-timestamp = { workspace = true }

# benchmarking
frame-benchmarking = { workspace = true, optional = true }
hex-literal = { workspace = true, optional = true }
pallet-balances = { workspace = true, optional = true }
test-utils = { path = "../test-utils", optional = true }
[dev-dependencies]
env_logger = { workspace = true }
externalities = { workspace = true }
frame-benchmarking = { workspace = true, features = ["std"] }
hex-literal = { workspace = true }
pallet-balances = { workspace = true, features = ["std"] }
sp-keyring = { workspace = true }
test-utils = { path = "../test-utils" }
serde = { workspace = true }
serde_json = { workspace = true }

[features]
default = [ "std" ]
std = [
	"frame-support/std",
	"frame-system/std",
	"log/std",
	"pallet-timestamp/std",
	"parity-scale-codec/std",
	"scale-info/std",
	"serde",
	"sgx-verify/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
	"sp-std/std",
	"teerex-primitives/std",
	"webpki/std",
]
runtime-benchmarks = [
	"frame-benchmarking",
	"hex-literal",
	"pallet-balances",
	"pallet-timestamp/runtime-benchmarks",
	"test-utils",
]

try-runtime = [ "frame-support/try-runtime" ]
